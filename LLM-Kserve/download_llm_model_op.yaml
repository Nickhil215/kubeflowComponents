name: Download LLM Model
description: Downloads a HuggingFace model and tokenizer to a given path and optionally uploads to S3.

inputs:
  - {name: model_id, type: String}
  - {name: hf_token, type: String}
  - {name: upload_to_s3, type: Boolean, default: false}
  - {name: s3_bucket, type: String, optional: true}
  - {name: s3_key, type: String, optional: true}

outputs:
  - {name: model_path, type: Path}

implementation:
  container:
    image: mohitverma1688/base_image:v0.1
    command:
    - sh
    - -c
    - |
      python3 -u -c "$0"
    - |
      import os, sys, tarfile
      import boto3
      from transformers import AutoTokenizer, AutoModelForCausalLM
      import argparse

      parser = argparse.ArgumentParser()
      parser.add_argument("--model_id", required=True)
      parser.add_argument("--hf_token", required=True)
      parser.add_argument("--upload_to_s3", action="store_true")
      parser.add_argument("--s3_bucket", default=None)
      parser.add_argument("--s3_key", default=None)
      parser.add_argument("--model_path", required=True)

      args = parser.parse_args()

      os.makedirs(args.model_path, exist_ok=True)

      print(f"Downloading model: {args.model_id}")
      model = AutoModelForCausalLM.from_pretrained(args.model_id, token=args.hf_token)
      tokenizer = AutoTokenizer.from_pretrained(args.model_id, token=args.hf_token)

      print(f"Saving model to: {args.model_path}")
      model.save_pretrained(args.model_path)
      tokenizer.save_pretrained(args.model_path)

      if args.upload_to_s3 and args.s3_bucket and args.s3_key:
          tar_path = "/tmp/model.tar.gz"
          with tarfile.open(tar_path, "w:gz") as tar:
              tar.add(args.model_path, arcname=os.path.basename(args.model_path))
          s3 = boto3.client("s3")
          s3.upload_file(tar_path, args.s3_bucket, args.s3_key)
          print(f"Uploaded model to s3://{args.s3_bucket}/{args.s3_key}")
      else:
          print("S3 upload skipped.")
    args:
    - --model_id
    - {inputValue: model_id}
    - --hf_token
    - {inputValue: hf_token}
    - --upload_to_s3
    - {inputValue: upload_to_s3}
    - --s3_bucket
    - {inputValue: s3_bucket}
    - --s3_key
    - {inputValue: s3_key}
    - --model_path
    - {outputPath: model_path}
