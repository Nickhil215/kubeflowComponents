name: Generate random user data
description: Generates synthetic user data with fields age, income, gender, and owns_car.
inputs:
- {name: num_instances, type: Integer}
outputs:
- {name: json_data}  # 🛠️ Output must be named json_data to match next step
implementation:
  container:
    image: python:3.8
    command:
    - python3
    - -u
    - -c
    - |
      import random
      import json
      import argparse
      import os

      def generate_data(num_instances):
          data = []
          for _ in range(num_instances):
              instance = {
                  "age": random.randint(18, 65),
                  "income": random.randint(30000, 120000),
                  "gender": random.choice(["male", "female"]),
                  "owns_car": random.choice([True, False])
              }
              data.append(instance)
          return data

      def _serialize_json(obj):
          return json.dumps(obj, sort_keys=True)

      parser = argparse.ArgumentParser()
      parser.add_argument("--num_instances", type=int, required=True)
      parser.add_argument("--json_data", type=str)
      args = parser.parse_args()

      output_data = generate_data(args.num_instances)

      os.makedirs(os.path.dirname(args.json_data), exist_ok=True)
      with open(args.json_data, "w") as f:
          f.write(_serialize_json(output_data))
    args:
    - --num_instances
    - {inputValue: num_instances}
    - --json_data
    - {outputPath: json_data}
